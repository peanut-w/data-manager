<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haiqiu.datamanager.dao.TeamPersonPOMapper">
    <resultMap id="BaseResultMap" type="com.haiqiu.datamanager.poentity.TeamPersonPO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="team_id" jdbcType="INTEGER" property="teamId"/>
        <result column="person_id" jdbcType="INTEGER" property="personId"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="shirtnumber" jdbcType="VARCHAR" property="shirtnumber"/>
        <result column="start" jdbcType="TIMESTAMP" property="start"/>
        <result column="end" jdbcType="TIMESTAMP" property="end"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="fee" jdbcType="INTEGER" property="fee"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, team_id, person_id, role_id, shirtnumber, start, end, state, fee
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team_person
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByTeAndPeFromTo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team_person
        where team_id = #{teamId,jdbcType=INTEGER}
        and person_id = #{personId,jdbcType=INTEGER}
        and start=#{start,jdbcType=TIMESTAMP}
        and 'end'=#{end,jdbcType=TIMESTAMP}
    </select>
    <select id="selectByPeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team_person
        where person_id = #{peId,jdbcType=INTEGER}
    </select>

    <select id="selectByTeamTime"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team_person
        where team_id = #{teamId,jdbcType=INTEGER}
        and start >= #{start,jdbcType=TIMESTAMP}
        and end &lt;= #{end,jdbcType=TIMESTAMP}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team_person
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.haiqiu.datamanager.poentity.TeamPersonPO">
    insert into team_person (id, team_id, person_id,
      role_id, shirtnumber, start,
      end, state, fee)
    values (#{id,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER},
      #{roleId,jdbcType=INTEGER}, #{shirtnumber,jdbcType=VARCHAR}, #{start,jdbcType=DISTINCT},
      #{end,jdbcType=DISTINCT}, #{state,jdbcType=VARCHAR}, #{fee,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.haiqiu.datamanager.poentity.TeamPersonPO">
        insert into team_person
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="teamId != null">
                team_id,
            </if>
            <if test="personId != null">
                person_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="shirtnumber != null">
                shirtnumber,
            </if>
            <if test="start != null">
                start,
            </if>
            <if test="end != null">
                end,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="fee != null">
                fee,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="teamId != null">
                #{teamId,jdbcType=INTEGER},
            </if>
            <if test="personId != null">
                #{personId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="shirtnumber != null">
                #{shirtnumber,jdbcType=VARCHAR},
            </if>
            <if test="start != null">
                #{start,jdbcType=DISTINCT},
            </if>
            <if test="end != null">
                #{end,jdbcType=DISTINCT},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="fee != null">
                #{fee,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.haiqiu.datamanager.poentity.TeamPersonPO">
        update team_person
        <set>
            <if test="teamId != null">
                team_id = #{teamId,jdbcType=INTEGER},
            </if>
            <if test="personId != null">
                person_id = #{personId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="shirtnumber != null">
                shirtnumber = #{shirtnumber,jdbcType=VARCHAR},
            </if>
            <if test="start != null">
                start = #{start,jdbcType=DISTINCT},
            </if>
            <if test="end != null">
                end = #{end,jdbcType=DISTINCT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="fee != null">
                fee = #{fee,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.haiqiu.datamanager.poentity.TeamPersonPO">
    update team_person
    set team_id = #{teamId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      shirtnumber = #{shirtnumber,jdbcType=VARCHAR},
      start = #{start,jdbcType=DISTINCT},
      end = #{end,jdbcType=DISTINCT},
      state = #{state,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <delete id="deleteAll">
    delete from team_person
  </delete>
</mapper>
